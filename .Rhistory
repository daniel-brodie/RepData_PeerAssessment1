find.package("devtools")
find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
library(devtools)
find_rtools()
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
clear
date
date()
date()
x<-1
print(x)
x
x<-11:30
x
demo()
demo(nlm)
demo(image)
demo(graphics)
getWB()
getWD()
getwd
getwd
getwd()
getwd()
getwd()
ls
library(datasets)
data(iris)
apply(iris[,1:4],2,mean)
colMeans(iris)
iris
rowMeans(iris[,1:4])
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris[,1:4],1,mean)
iris
library(datasets)
data(mtcars)
mtcars
split(mtcars,mtcars$cyl)
lapply(mtcars,mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
apply(mtcars,2,mean)
with(mtcars,tapply(mpg,cyl,mean))
sapply(split(mtcars$mpg,mtcars$cyl),mean)
mean(mtcars$mpg,mtcars$cyl)
sapply(mtcars,cyl,mean)
mtcars
head(mycars)
head(mtcars)
library(dplyr)
head(mtcars)
filter(mtcars,cyl=4) %>% select(hp)
filter(mtcars,cyl==4) %>% select(hp)
filter(mtcars,cyl==4) %>% select(hp) %>% mean()
mean(filter(mtcars.cyl==4) %>% select(hp))
mean(filter(mtcars,cyl==4) %>% select(hp))
colMeans(filter(mtcars,cyl==4))
colMeans(filter(mtcars,cyl==4) %>% select(hp))
colMeans(filter(mtcars,cyl==8) %>% select(hp))
209.2143 - 82.63636
debug(ls)
ls()
quit
exit
bye
library(dplyr)
library(swirl)
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.NA(r_version))
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2,package,id_id)
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_byltes=mean(size))
summarize(cran,avg_bytes=mean(size))
setwd("../")
setwd("~/")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppn,col="green")
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(polution)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
with(pollution,plot(latitude,pm25))
abline(h=12)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,pollution$region=="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(west$latitude,east$pm25,main="East")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Gyser data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.com(png,file="geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region,state,layout=c(4,1))
xyplot(Life.Exp~Income|region,state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(disp1,hwy,mpg)
qplot(displ,hwy,mpg)
head(mpg)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm==TRUE)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and wind in New York City")
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality,month==5)
may<-subset(airquality,Month==5)
points(may$Wind,may$Ozone)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=18)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17.8),col=c("blue","red"),legend=c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
a
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
setwd("../")
setwd("C:/Users/Daniel/OneDrive/DataScience/Repro/week2/project/RepData_PeerAssessment1")
library(dplyr)
rawdata <- read.csv("activity.csv")
rawdata <- tbl_df(rawdata)
rawdata.nona <- filter(rawdata,!is.na(steps))
nadata <- filter(rawdata,is.na(steps))
nadata
tail(nadata)
source("funcs.r")
getMean(2355)
onlyNA<-nadata
rm(nadata)
onlyNA
onlyNA<-mutate(onlyNA,newSteps=0)
onlyNA
getMean(0)
onlyNA[1,"newSteps"] <- getMean(onlyNA[1,"interval"])
onlyNA
onlyNA[1,"newSteps"]
onlyNA[1,"interval"]
onlyNA[[1,"interval"]]
onlyNA[[1,"newSteps"]]
onlyNA[[1,"newSteps"]] <- getMean(onlyNA[[1,"interval"]])
ONLYN
onlyNA
source("funcs.r")
addMissingData()
onlyNA
summary(onlyNA)
onlyNA<-mutate(onlyNA,newSteps=0)
onlyNA
source("funcs.r")
addMissingData()
onlyNA
?replace
rawdata
rawdata %>% select(interval,steps) %>% group_by(interval) %>% summarise(avg.steps=mean(steps))
?transform
rawdata
tempDF <- rawdata %>% select(interval,steps) %>% group_by(interval) %>% summarise(avg.steps=mean(steps))
tempDF
tempDF <- rawdata.nona %>% select(interval,steps) %>% group_by(interval) %>% summarise(avg.steps=mean(steps))
tempDF
?merge
onlyNA
tempDF
merge(x,y)
merge(onlyNA,tempDF,all.x = TRUE,by.x = interval, by.y=interval)
merge(onlyNA,tempDF,all.x = TRUE,by.x = "interval", by.y="interval")
onlyNA <- merge(onlyNA,tempDF,all.x = TRUE,by.x = "interval", by.y="interval")
onlyNA
onlyNA <- tbl_df(onlyNA)
onlyNA
onlyNA <- mutate(onlyNA,steps=avg.steps)
onlyNA
onlyNA<-select(onlyNA,-avg.steps)
onlyNA
onlyNA <- filter(rawdata,is.na(steps))
tempDF <- rawdata.nona %>% select(interval,steps) %>% group_by(interval) %>% summarise(avg.steps=mean(steps))
onlyNA <- merge(onlyNA,tempDF,all.x = TRUE,by.x = "interval", by.y="interval")
onlyNA <- mutate(onlyNA,steps=avg.steps)
onlyNA<-select(onlyNA,-avg.steps)
onlyNA
numberNA <- nrow(filter(rawdata,is.na(steps)))
onlyNA <- filter(rawdata,is.na(steps))
tempDF <- rawdata.nona %>% select(interval,steps) %>% group_by(interval) %>% summarise(avg.steps=mean(steps))
onlyNA <- merge(onlyNA,tempDF,all.x = TRUE,by.x = "interval", by.y="interval")
onlyNA <- mutate(onlyNA,steps=avg.steps)
onlyNA<-select(onlyNA,-avg.steps)
onlyNA<-tbl_df(onlyNA)
onlyNA
numberNA <- nrow(filter(rawdata,is.na(steps)))
onlyNA <- filter(rawdata,is.na(steps))
tempDF <- rawdata.nona %>% select(interval,steps) %>% group_by(interval) %>% summarise(avg.steps=mean(steps))
onlyNA <- merge(onlyNA,tempDF,all.x = TRUE,by.x = "interval", by.y="interval")
onlyNA <- mutate(onlyNA,steps=as.integer(avg.steps))
onlyNA<-select(onlyNA,-avg.steps)
onlyNA<-tbl_df(onlyNA)
onlyNA
?cbind
rawdata.new <- cbind(rawdata.nona,onlyNA)
rawdata.new <- rbind(rawdata.nona,onlyNA)
summary(rawdata.new)
day.steps <- select(rawdata.new,steps,date,interval) %>% group_by(date) %>% summarize(Total.Steps=sum(steps))
myMean<-mean(day.steps$Total.Steps)
myMedian <- median(day.steps$Total.Steps)
hist(day.steps$Total.Steps, main="Histogram of Total Steps by Day", xlab = "Total Steps by Day")
?weekdays
rawdata.new
rawdata.new[1,2]
weekdays(rawdata.new[1,2])
x<-rawdata.new[1,2]
x
weekdays(x)
rawdata.new
mutate(rawdata.new,test=weekdays(date))
mutate(rawdata.new,test=weekdays(as.Date(date))
)
mutate(rawdata.new,test=weekdays(as.Date(date)))
table((mutate(rawdata.new,test=weekdays(as.Date(date))))$test)
?case_when
test <- mutate(rawdata.new,test=weekdays(as.Date(date)))
test
test <- mutate(rawdata.new,test = case_when(weekdays(as.Date(date))="Saturday"~"Weekend") )
test <- mutate(rawdata.new,test = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend") )
test
table(test$test)
test <- mutate(rawdata.new,test = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend", weekdays(as.Date(date))=="Sunday"~"Weekend" ) )
table(test$test)
test <- mutate(rawdata.new,test = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend", weekdays(as.Date(date))=="Sunday"~"Weekend" ), TRUE~"Weekday" )
test <- mutate(rawdata.new,test = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend", weekdays(as.Date(date))=="Sunday"~"Weekend" ), TRUE~"Weekdays" )
test <- mutate(rawdata.new,test = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend", weekdays(as.Date(date))=="Sunday"~"Weekend", TRUE~"Weekdays" )
)
table(test$test)
test <- mutate(rawdata.new,test = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend", weekdays(as.Date(date))=="Sunday"~"Weekend", TRUE~"Weekdays" ))
data.addDays <- mutate(rawdata.new,Day = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend", weekdays(as.Date(date))=="Sunday"~"Weekend", TRUE~"Weekdays" ))
data.addDays
data.addDays <- mutate(rawdata.new,Day = case_when(weekdays(as.Date(date))=="Saturday"~"Weekend", weekdays(as.Date(date))=="Sunday"~"Weekend", TRUE~"Weekday" ))
data.addDays
data.WeekDay <- data.addDays %>% filter(Day="Weekday") %>% group_by(interval) %>% summarize(Avg.Steps=mean(steps))
data.WeekDay <- data.addDays %>% filter(Day=="Weekday") %>% group_by(interval) %>% summarize(Avg.Steps=mean(steps))
data.WeekDay
plot(data.WeekDay)
plot(data.WeekDay,type="l")
data.WeekEnd <- data.addDays %>% filter(Day=="Weekend") %>% group_by(interval) %>% summarize(Avg.Steps=mean(steps))
plot(data.WeekEnd,type="l", col="red")
points(data.WeekDay,type="l")
